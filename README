##############################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 # # # # # # # # # # # # Information - License # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
##############################################################################

0x01        Information / README / Documentation
TheCMS is a PHP based CMS. Mainly as a learn-by-doing project, but is quite   
potent for actual use. By looking at projects like Drupal and Django, simple  
taking some of the features we like and trying to avoid those we don't we have
created a somewhat full CMS solution that is also easily expandable.

0x02        License
The software is currently provided under the BSD license, although this may be
subject to change in the near future.

Copyright (c) 2009-2011, Christian Kjaer Laustsen All rights reserved. 

Redistribution and use in source and binary forms, with or without            
modification, are permitted provided that the following conditions are met: 
Redistributions of source code must retain the above copyright notice,        
this list of conditions and the following disclaimer. 
Redistributions in binary form must reproduce the above copyright notice,     
this list of conditions and the following disclaimer in the documentation     
and/or other materials provided with the distribution. Neither the name of    
the <ORGANIZATION> nor the names of its contributors may be used to endorse   
or promote products derived from this software without specific prior written 
permission. 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"   
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE     
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE    
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE     
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF          
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS      
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN       
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF        
THE POSSIBILITY OF SUCH DAMAGE.

##############################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 # # # # # # # # # # # # Files - Folders # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
##############################################################################

1x01        manage.php
In this document resides the main driveforece of TheCMS. The database class,  
module class, templates class and the various class's that handles the login  
system.

1x02        settings.php
Here is all the constants that needs defining throughout TheCMS. From database
connection to URLs and default mailer behavior.

1x03        urls.php
Here is the default url handling (derived from .htaccess's urlrewrite, that   
puts everything behind a ?handle= query). The path to admin panel, and main   
application is defined here.

1x04        INSTALL.sql
Our sql information for the basic setup of TheCMS

1x05        modules/
All modules go in here, organized in folders. The structure goes:

    modules/mymodule/model.php # Holds the core of the module
    modules/mymodule/urls.php # Handles all the urls and passes to view.php
    modules/mymodule/view.php # What to display to the user
    modules/mymodule/admin.php # What to display in admin
    modules/mymodule/INSTALL.sql # All SQL information
    modules/mymodule/DELETE.sql # Deletion information for SQL

None of these files are required, but their names must match their use, else  
it will result in wrong order of includes and can essentially cause some nice 
500's ;)...

1x06        templates/
Holder for all our template files. Prefered extension is .tpl .

1x07        resources/
All of our resource files. This includes images, css, javascript but also     
error documents, licencse and uploads.

1x08        cgi-bin/
Our backup scripts written in python

1x09        _backup/
Location for all our backups. Server backups are located in the main folder  
saved as .zip files ,and database backups are located in: _backup/database/   
with .sql extension.

1x10        _dev/
For our delta comparison system (currently also in development).

##############################################################################
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 # # # # # # # # # # # # # Usage - Files & Class' # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
##############################################################################

2x01        Usage
1. First clone the repos
    $ git clone git@github.com:ZealDev/TheCMS.git
2. Create a settings.php file in the root of the project, look at 2x09 for    
content of the settings.php
3. Alter constants in settings.php (especially the database constants)
4. Your good to go!

2x09        Settings.php
#-#-#-#-#-#-#-#-#-#-#-# Start of file content! #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
<?php
#____________________________________________________________________________#
# File: settings.php                                                         #
#____________________________________________________________________________#

/**
 * Database Constants - these constants are required
 * in order for there to be a successful connection
 * to the MySQL database. Make sure the information is
 * correct.
 */
define("DB_TYPE", "MySQL");
define("DB_SERVER", "servername");
define("DB_USER", "username");
define("DB_PASS", "password");
define("DB_NAME", "databasename");

/**
 * Database Table Constants - these constants
 * hold the names of all the database tables used
 * in the script.
 */
define("TBL_USERS", "usersdb");
define("TBL_ACTIVE_USERS",  "active_users");
define("TBL_ACTIVE_GUESTS", "active_guests");
define("TBL_BANNED_USERS",  "banned_users");

/**
 * Server specific Constants
 */
$ar = split("[/ ]", $_SERVER['SERVER_SOFTWARE']);
for($i=0; $i<(count($ar)); $i++){
    switch(strtoupper($ar[$i])){
        case 'APACHE':
            $i++;
            $Apache_Version = $ar[$i];
            break;
        case 'PHP':
            $i++;
            $PHP_Version = $ar[$i];
            break;
    }
}
define("APACHE_VERSION_NUM", $Apache_Version);
define("PHP_VERSION_NUM", $PHP_Version);

/**
 * Directory and URL Constants
 */

define("ADMIN_PATH", "admin");
define("URL", $_GET['handle']);
define("DS", DIRECTORY_SEPARATOR);
define("URL_ROOT", "/");
define("ROOT", dirname(__file__) . DS);
define("MODULE_ROOT", ROOT . 'modules' . DS);
define("TEMPLATES_ROOT", ROOT . 'templates' . DS);
define("RESOURCES_ROOT", URL_ROOT . 'resources' . DS);
define("MEDIA_ROOT", URL_ROOT . 'resources' . DS . 'css' . DS);
define("UPLOAD_ROOT", ROOT . 'resources' . DS . 'uploads' . DS);

/**
 * Special Names and Level Constants - the admin
 * page will only be accessible to the user with
 * the admin name and also to those users at the
 * admin user level. Feel free to change the names
 * and level constants as you see fit, you may
 * also add additional level specifications.
 * Levels must be digits between 0-9.
 */
define("ADMIN_NAME", "chrules");
define("GUEST_NAME", "Guest");
define("ADMIN_LEVEL", 9);
define("USER_LEVEL",  1);
define("USER2_LEVEL",  2);
define("USER3_LEVEL",  3);
define("USER4_LEVEL",  4);
define("USER5_LEVEL",  5);
define("USER6_LEVEL",  6);
define("USER7_LEVEL",  7);
define("USER8_LEVEL",  8);
define("GUEST_LEVEL", 0);

/**
 * This boolean constant controls whether or
 * not the script keeps track of active users
 * and active guests who are visiting the site.
 */
define("TRACK_VISITORS", true);

/**
 * Timeout Constants - these constants refer to
 * the maximum amount of time (in minutes) after
 * their last page fresh that a user and guest
 * are still considered active visitors.
 */
define("USER_TIMEOUT", 10);
define("GUEST_TIMEOUT", 5);

/**
 * Cookie Constants - these are the parameters
 * to the setcookie function call, change them
 * if necessary to fit your website. If you need
 * help, visit www.php.net for more info.
 * <http://www.php.net/manual/en/function.setcookie.php>
 */
define("COOKIE_EXPIRE", 60*60*24*100);  //100 days by default
define("COOKIE_PATH", "/");  //Avaible in whole domain

/**
 * Email Constants - these specify what goes in
 * the from field in the emails that the script
 * sends to users, and whether to send a
 * welcome email to newly registered users.
 */
define("EMAIL_FROM_NAME", "Zeal - Christian Laustsen");
define("EMAIL_FROM_ADDR", "Contact@ZealDev.com");
define("EMAIL_SIGNATURE", "- Zeal");
define("EMAIL_WELCOME", false);

/**
 * This constant forces all users to have
 * lowercase usernames, capital letters are
 * converted automatically.
 */
define("ALL_LOWERCASE", false);

#-#-#-#-#-#-#-#-#-#-#-# End of file content! #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#


2x10        Using the class's
    The Database class:
/*
---- Instantiate class -----
$Database = new Database;
---- Get one entry -----
$fetchone = $Database->fetchOne($table, array($needle_field->$value));
$fetchone['field'];
---- Get many entries -----
$fetchAll = $Database->fetchAll($table, array($needle_field->$value));
foreach($fetchAll as $data)
{
    $data['field'];
}
---- Insert an entry -----
$Database->insert($table, array($field1->$value1, $field2=>$value2))
---- Update an entry -----
$Database->update($table, array($field1->$value1, $field2=>$value2),
                                array($needle_field->$value))
---- Delete an entry -----
$Database->delete($table, array($needle_field->$value));
---- Count ----
$Database->count($table, array($needle_field->$value));
*/

    The Modules class:
/*
----- Instantiate class -----
$modules = new Modules;
----- Get all modules -----
$modules = new Modules;
$getModules = $modules->getModules();
foreach($getModules as $module)
{
    include('modules/'.$module.'/'.$module.'.class.php');
}
---- Run install on modules ----
$modules->installSQL();
*/

    The Templates class:

/*
---- Example 1 -----
$template_dir = TEMPLATES_ROOT . end(explode(DS, dirname(__file__))) . DS;
$content = new Template($template_dir . 'page.tpl');
$content->set('id', $getpage['id']);
$content->set('Title', $getpage['name']);
$content->set('Content' , $getpage['content']);
$content = $content->output();

<h1>{% TITLE %} {% ID %}</h1>
<p>{% CONTENT %}</p>
---- Example 2 ----
# Using $content from above !
$layout = new Template(TEMPLATES_ROOT . 'main.tpl');
$layout->set('ID', '2');
$layout->set('TITLE', 'T3$t1ng l13k t3h 60$$ ! !');
$layout->set('CONTENT', $content);
print $layout->output();
*/